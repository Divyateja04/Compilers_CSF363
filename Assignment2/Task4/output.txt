[H[2J[3J=======================================
Test Case 1
program ArrayAverage;
var
  numbers: array[1..5] of Integer;
  i, a, b, d, sum, digit, number, count : Integer;
  average : real;
  x: boolean;
  c: char;
begin
  i := 100;
  i := i + i * (i - i) + (i - i) * d;
  x := (7 < 5) and (6 > 5);
  a := -3;
  count := 0;
  number := 0;
  digit := 0.0;

  numbers[3] := 4;

  write("Enter 5 integer values:");

  c := 'c';
  write(c);

  for i := 1 to 5 do
  begin
    read(numbers[i]);
  end;

  for i := 1 to 5 do
  begin
    write(numbers[i]);
  end;

  sum := 0;
  for i := 1 to 5 do
  begin
    sum := sum + 6 * 7 + numbers[i];
  end;

  if x then
  begin
    a := numbers[i] + 9;
    write("x is true");
  end
  else
  begin
    write("x is false");
    a := numbers[i] - 9;
  end;


  while number <> 0 do
  begin
    digit := number - (number / 10) * 10;
    
    if digit <> 0 then
    begin
      count:=count+1;
    end;

    number := number / 10;
  end;

  average := sum / 5;
  write("The sum and average are: "); 
  write(sum, average);
end.Deleting old files
Compiling yacc program
Compiling lex program
Compiling the program in gcc
|t0||d||7||10|============================
:000:>  i  =  100 ;
:001:>  t0  =  i  -  i ;
:002:>  t1  =  i  *  t0 ;
:003:>  t2  =  i  +  t1 ;
:004:>  t3  =  i  -  i ;
:005:>  t4  =  t3  *  d ;
:006:>  t5  =  t2  +  t4 ;
:007:>  i  =  t5 ;
:008:>  t6  =  7  <  5 ;
:009:>  t7  =  6  >  5 ;
:010:>  t8  =  t6  &  t7 ;
:011:>  x  =  t8 ;
:012:>  t9  =  -  3 ;
:013:>  a  =  t9 ;
:014:>  count  =  0 ;
:015:>  number  =  0 ;
:016:>  digit  =  0.0 ;
:017:>  t10  =  3  *  Integer ;
:018:>  t11  =  t10  +  &numbers ;
:019:>  *t11  =  4 ;
:020:>  c  =  'c' ;

:021:>  for_start ;
:022:>  i  =  1 ;
:023:>  for_cond_start ;
:024:>  t12  =  i  <=  5 ;
:025:>  for_cond_end  =  t12  true: goto 026  false: goto 030 ;
:026:>  for_body_start ;
:027:>  t13  =  i  *  Integer ;
:028:>  i  =  i  +  1 ;
:029:>  for_body_end  =  goto 023 ;
:030:>  for_end ;


:031:>  for_start ;
:032:>  i  =  1 ;
:033:>  for_cond_start ;
:034:>  t14  =  i  <=  5 ;
:035:>  for_cond_end  =  t14  true: goto 036  false: goto 040 ;
:036:>  for_body_start ;
:037:>  t15  =  i  *  Integer ;
:038:>  i  =  i  +  1 ;
:039:>  for_body_end  =  goto 033 ;
:040:>  for_end ;

:041:>  sum  =  0 ;

:042:>  for_start ;
:043:>  i  =  1 ;
:044:>  for_cond_start ;
:045:>  t16  =  i  <=  5 ;
:046:>  for_cond_end  =  t16  true: goto 047  false: goto 057 ;
:047:>  for_body_start ;
:048:>  t17  =  6  *  7 ;
:049:>  t18  =  sum  +  t17 ;
:050:>  t19  =  i  *  Integer ;
:051:>  t20  =  t19  +  &numbers ;
:052:>  t21  =  *t20 ;
:053:>  t22  =  t18  +  t21 ;
:054:>  sum  =  t22 ;
:055:>  i  =  i  +  1 ;
:056:>  for_body_end  =  goto 044 ;
:057:>  for_end ;


:058:>  if_start ;
:059:>  if_cond_end  =  x  true: goto 060  false: goto 067 ;
:060:>  ifthen_body_start ;
:061:>  t23  =  i  *  Integer ;
:062:>  t24  =  t23  +  &numbers ;
:063:>  t25  =  *t24 ;
:064:>  t26  =  t25  +  9 ;
:065:>  a  =  t26 ;
:066:>  ifthen_body_end  =  goto 074 ;
:067:>  else_body_start ;
:068:>  t27  =  i  *  Integer ;
:069:>  t28  =  t27  +  &numbers ;
:070:>  t29  =  *t28 ;
:071:>  t30  =  t29  -  9 ;
:072:>  a  =  t30 ;
:073:>  else_body_end ;
:074:>  if_end ;


:075:>  while_start ;
:076:>  while_cond_start ;
:077:>  t31  =  number  <>  0 ;
:078:>  while_cond_end  =  t31  true: goto 079  false: goto 095 ;
:079:>  while_body_start ;
:080:>  t32  =  number  /  10 ;
:081:>  t33  =  t32  *  10 ;
:082:>  t34  =  number  -  t33 ;
:083:>  digit  =  t34 ;

:084:>  if_start ;
:085:>  t35  =  digit  <>  0 ;
:086:>  if_cond_end  =  t35  true: goto 087  false: goto 091 ;
:087:>  ifthen_body_start ;
:088:>  t36  =  count  +  1 ;
:089:>  count  =  t36 ;
:090:>  ifthen_body_end  =  goto 091 ;
:091:>  if_end ;

:092:>  t37  =  number  /  10 ;
:093:>  number  =  t37 ;
:094:>  while_body_end  =  goto 076 ;
:095:>  while_end ;

:096:>  t38  =  sum  /  5 ;
:097:>  average  =  t38 ;
============================



Parsing completed successfully
