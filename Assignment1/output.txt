Input: a
((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: a
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B
::> Resetting State numbers
Output: YES
--------------------- END TEST CASE  ---------------------

