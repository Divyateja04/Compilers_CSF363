Input: baabaababbababaaaabbbababa
Printing Regex:  
((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
((((a).(a)).(((a).(a))*)).(b))
(((b).(((a).(a))?)).(b))

Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: F 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaababb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaababb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaababb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baabaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baabaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baabaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: baab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->C->F->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: baab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: baab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->C->D->F->E
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aababb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aababb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aababb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->F
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: abbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: abbababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->F->H->F->H->F
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaabbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaabbbabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaabbbaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaabbbab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaabbba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaabbb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E->C
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D->E
::> Resetting State numbers
Reg Exp. (((b).(((a).(a))?)).(b))
Testcase: aaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: baa.?.b.
::> Found a CONCAT
::> Found a ZERO OR ONE
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 14
::> End State: 15
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 8 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { 5 } { } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 9 } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 0 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { 13 } { } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 10 } 
::> State: 15 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 6 8 9 11 12 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 11 12 } 
::> State: 6 { 2 } 
::> State: 7 { 9 11 12 } 
::> State: 8 { 2 6 9 11 12 } 
::> State: 9 { 11 12 } 
::> State: 10 { 0 } 
::> State: 11 { 12 } 
::> State: 12 { } 
::> State: 13 { 15 } 
::> State: 14 { 0 10 } 
::> State: 15 { } 

::> Printing the RAW DFA: 
[ 14 ] [ ] [ 1 2 6 8 9 11 12 ]
[ ] [ ] [ ]
[ 1 2 6 8 9 11 12 ] [ 3 4 ] [ 13 15 ]
[ 3 4 ] [ 5 7 9 11 12 ] [ ]
[ 13 15 ] [ ] [ ]
[ 5 7 9 11 12 ] [ ] [ 13 15 ]

::> Found the following DFA:
A B C 
B B B 
C D E 
D F B 
E B B 
F B E 

Final States: E 

::> Flow: ->A->B->B->B
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: aa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->D
::> Resetting State numbers
Reg Exp. ((((a).(a)).(((a).(a))*)).(b))
Testcase: aa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: aa.aa.*.b.
::> Found a CONCAT
::> Found a CONCAT
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 18
::> End State: 19
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { 12 } 
::> State: 6 { 7 } { } { } 
::> State: 7 { } { } { 8 } 
::> State: 8 { 9 } { } { } 
::> State: 9 { } { } { 11 } 
::> State: 10 { } { } { 6 } 
::> State: 11 { } { } { 12 } 
::> State: 12 { } { } { 10 13 } 
::> State: 13 { } { } { 15 } 
::> State: 14 { } { } { 4 } 
::> State: 15 { } { } { 16 } 
::> State: 16 { } { 17 } { } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 14 } 
::> State: 19 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 6 10 12 13 15 16 } 
::> State: 4 { 0 } 
::> State: 5 { 6 10 12 13 15 16 } 
::> State: 6 { } 
::> State: 7 { 8 } 
::> State: 8 { } 
::> State: 9 { 6 10 11 12 13 15 16 } 
::> State: 10 { 6 } 
::> State: 11 { 6 10 12 13 15 16 } 
::> State: 12 { 6 10 13 15 16 } 
::> State: 13 { 15 16 } 
::> State: 14 { 0 4 } 
::> State: 15 { 16 } 
::> State: 16 { } 
::> State: 17 { 19 } 
::> State: 18 { 0 4 14 } 
::> State: 19 { } 

::> Printing the RAW DFA: 
[ 18 ] [ 1 2 ] [ ]
[ 1 2 ] [ 3 5 6 10 12 13 15 16 ] [ ]
[ ] [ ] [ ]
[ 3 5 6 10 12 13 15 16 ] [ 7 8 ] [ 17 19 ]
[ 7 8 ] [ 6 9 10 11 12 13 15 16 ] [ ]
[ 17 19 ] [ ] [ ]
[ 6 9 10 11 12 13 15 16 ] [ 7 8 ] [ 17 19 ]

::> Found the following DFA:
A B C 
B D C 
C C C 
D E F 
E G C 
F C C 
G E F 

Final States: D F G 

::> Flow: ->A->B->D
::> Resetting State numbers
Reg Exp. ((((b)|((a).(b))).(((b)|((a).(b)))*))|((((b)|((a).(b)))*).(a)))
Testcase: abbbababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: bab.|bab.|*.bab.|*a.|
::> Found a CONCAT
::> Found an OR
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found a CONCAT
::> Found an OR
::> Found a KLEENE STAR
::> Found a CONCAT
::> Found an OR
::> Generated NFA successfully
::> Start State: 40
::> End State: 41
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 9 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { 9 } 
::> State: 8 { } { } { 6 0 } 
::> State: 9 { } { } { 20 } 
::> State: 10 { } { 11 } { } 
::> State: 11 { } { } { 19 } 
::> State: 12 { 13 } { } { } 
::> State: 13 { } { } { 14 } 
::> State: 14 { } { 15 } { } 
::> State: 15 { } { } { 17 } 
::> State: 16 { } { } { 12 } 
::> State: 17 { } { } { 19 } 
::> State: 18 { } { } { 16 10 } 
::> State: 19 { } { } { 20 } 
::> State: 20 { } { } { 18 21 } 
::> State: 21 { } { } { 23 } 
::> State: 22 { } { } { 8 } 
::> State: 23 { } { } { 41 } 
::> State: 24 { } { 25 } { } 
::> State: 25 { } { } { 33 } 
::> State: 26 { 27 } { } { } 
::> State: 27 { } { } { 28 } 
::> State: 28 { } { 29 } { } 
::> State: 29 { } { } { 31 } 
::> State: 30 { } { } { 26 } 
::> State: 31 { } { } { 33 } 
::> State: 32 { } { } { 30 24 } 
::> State: 33 { } { } { 34 } 
::> State: 34 { } { } { 32 35 } 
::> State: 35 { } { } { 36 } 
::> State: 36 { 37 } { } { } 
::> State: 37 { } { } { 39 } 
::> State: 38 { } { } { 34 } 
::> State: 39 { } { } { 41 } 
::> State: 40 { } { } { 38 22 } 
::> State: 41 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 9 10 12 16 18 20 21 23 41 } 
::> State: 2 { } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 9 10 12 16 18 20 21 23 41 } 
::> State: 6 { 2 } 
::> State: 7 { 9 10 12 16 18 20 21 23 41 } 
::> State: 8 { 0 2 6 } 
::> State: 9 { 10 12 16 18 20 21 23 41 } 
::> State: 10 { } 
::> State: 11 { 10 12 16 18 19 20 21 23 41 } 
::> State: 12 { } 
::> State: 13 { 14 } 
::> State: 14 { } 
::> State: 15 { 10 12 16 17 18 19 20 21 23 41 } 
::> State: 16 { 12 } 
::> State: 17 { 10 12 16 18 19 20 21 23 41 } 
::> State: 18 { 10 12 16 } 
::> State: 19 { 10 12 16 18 20 21 23 41 } 
::> State: 20 { 10 12 16 18 21 23 41 } 
::> State: 21 { 23 41 } 
::> State: 22 { 0 2 6 8 } 
::> State: 23 { 41 } 
::> State: 24 { } 
::> State: 25 { 24 26 30 32 33 34 35 36 } 
::> State: 26 { } 
::> State: 27 { 28 } 
::> State: 28 { } 
::> State: 29 { 24 26 30 31 32 33 34 35 36 } 
::> State: 30 { 26 } 
::> State: 31 { 24 26 30 32 33 34 35 36 } 
::> State: 32 { 24 26 30 } 
::> State: 33 { 24 26 30 32 34 35 36 } 
::> State: 34 { 24 26 30 32 35 36 } 
::> State: 35 { 36 } 
::> State: 36 { } 
::> State: 37 { 39 41 } 
::> State: 38 { 24 26 30 32 34 35 36 } 
::> State: 39 { 41 } 
::> State: 40 { 0 2 6 8 22 24 26 30 32 34 35 36 38 } 
::> State: 41 { } 

::> Printing the RAW DFA: 
[ 40 ] [ 3 4 27 28 37 39 41 ] [ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 3 4 27 28 37 39 41 ] [ ] [ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 1 9 10 12 16 18 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ ] [ ] [ ]
[ 5 7 9 10 12 16 18 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 13 14 27 28 37 39 41 ] [ ] [ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ]
[ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]
[ 10 12 15 16 17 18 19 20 21 23 24 26 29 30 31 32 33 34 35 36 41 ] [ 13 14 27 28 37 39 41 ] [ 10 11 12 16 18 19 20 21 23 24 25 26 30 32 33 34 35 36 41 ]

::> Found the following DFA:
A B C 
B D E 
C F G 
D D D 
E F G 
F D H 
G F G 
H F G 

Final States: B C E F G H 

::> Flow: ->A->B->E->G->G->F->H->F->H->F
::> Resetting State numbers
::> Final Output:
<baab,3><aab,2><abbababa,1><aa,2><abbbababa,1>
--------------------- END TEST CASE  ---------------------

