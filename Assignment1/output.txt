Input: abbaababaaabbaa
Printing Regex:  
(((a)*).(b))
((b).(a))

Reg Exp. (((a)*).(b))
Testcase: abbaababaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaababaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaababaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaababaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaababaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaababaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaababaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaababaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baababaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baababaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baababaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baababaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baababaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baababaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baababaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baababaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baabab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baaba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ababaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ababaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ababaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ababaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ababaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ababaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ababaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ababaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ababaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ababaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ababa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: aba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: aba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abaaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abaaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abaaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abaaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abaaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: abaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: abaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: aba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: aba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->C
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: aaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->B->B->C->D->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: aaabbaa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: aaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->B->B->C->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: aaabba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: aaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->B->B->C->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: aaabb
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B->B->B->B->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: aaab
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B->B->B->C
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: baa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: baa
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D->B
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: ba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->C->D
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: ba
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->C->D
::> Resetting State numbers
Reg Exp. (((a)*).(b))
Testcase: a
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: a*b.
::> Found a KLEENE STAR
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 6
::> End State: 7
::> Found the following NFA with e Transitions: 
::> State: 0 { 1 } { } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { } { } { 0 3 } 
::> State: 3 { } { } { 4 } 
::> State: 4 { } { 5 } { } 
::> State: 5 { } { } { 7 } 
::> State: 6 { } { } { 2 } 
::> State: 7 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 0 2 3 4 } 
::> State: 2 { 0 3 4 } 
::> State: 3 { 4 } 
::> State: 4 { } 
::> State: 5 { 7 } 
::> State: 6 { 0 2 3 4 } 
::> State: 7 { } 

::> Printing the RAW DFA: 
[ 6 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 0 1 2 3 4 ] [ 0 1 2 3 4 ] [ 5 7 ]
[ 5 7 ] [ ] [ ]
[ ] [ ] [ ]
::> Final States in the NFA: 
7 

::> Found the following DFA:
A B C 
B B C 
C D D 
D D D 

Final States: C 

::> Flow: ->A->B
::> Resetting State numbers
Reg Exp. ((b).(a))
Testcase: a
::> Converting infix to postfix
::> Converted infix to prefix
Postfix: ba.
::> Found a CONCAT
::> Generated NFA successfully
::> Start State: 4
::> End State: 5
::> Found the following NFA with e Transitions: 
::> State: 0 { } { 1 } { } 
::> State: 1 { } { } { 2 } 
::> State: 2 { 3 } { } { } 
::> State: 3 { } { } { 5 } 
::> State: 4 { } { } { 0 } 
::> State: 5 { } { } { } 

::> Epsilon Closures: 
::> State: 0 { } 
::> State: 1 { 2 } 
::> State: 2 { } 
::> State: 3 { 5 } 
::> State: 4 { 0 } 
::> State: 5 { } 

::> Printing the RAW DFA: 
[ 4 ] [ ] [ 1 2 ]
[ ] [ ] [ ]
[ 1 2 ] [ 3 5 ] [ ]
[ 3 5 ] [ ] [ ]
::> Final States in the NFA: 
5 

::> Found the following DFA:
A B C 
B B B 
C D B 
D B B 

Final States: D 

::> Flow: ->A->B
::> Resetting State numbers
::> Final Output: <ab,1><ba,2><ab,1><ab,1><aaab,1><ba,2><a,0>
--------------------- END TEST CASE  ---------------------

